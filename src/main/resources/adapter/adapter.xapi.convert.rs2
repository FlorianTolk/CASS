
xapiObj=#toObject(obj="@obj");

actorAsCassIdentity=xapiObj.get(actor="").xapiAgentToPk().replace(regex="true",replace="\r?\n",with="");
actorMbox=xapiObj.get(actor="").toArray(wrap="true").getMbox();
authorityAsCassIdentity=xapiObj.get(authority="").xapiAgentToPk().replace(regex="true",replace="\r?\n",with="");
authorityMbox=xapiObj.get(authority="").toArray(wrap="true").getMbox();

objectId=xapiObj.get(object="").get(id="");

xapiActor=xapiObj.get(actor="").toArray(wrap="true").getIndex(index="0");
xapiAuthority=xapiObj.get(authority="").toArray(wrap="true").getIndex(index="0");
xapiScore=xapiObj.get(result="").get(score="").get(scaled="");
xapiRaw=xapiObj.get(result="").get(score="").get(raw="");
xapiMin=xapiObj.get(result="").get(score="").get(min="");
xapiMax=xapiObj.get(result="").get(score="").get(max="");

xapiScore=#if(
	operator=xapiScore,
	operand="",
	ne=xapiScore,
	eq=#if(
		operator=#object(
			min=xapiMin,
			max=xapiMax,
			raw=xapiRaw
		).valueSet().count(),
		operand="3",
		eq=#divide(
			numerator=#subtract(operator=xapiRaw,operand=xapiMin),
			denominator=#subtract(operator=xapiMax,operand=xapiMin)
		)
	)
);

//These are probably important, but not addressed by alignments.
validity=#toDouble(obj="1.0");
reliability=#toDouble(obj="1.0");
coverage=#toDouble(obj="1.0");

convert=#object(
	subject=actorAsCassIdentity.cassEncrypt(
		owner=#xapiMePpk().rsaPpkToPk().replace(regex="true",replace="\r?\n",with="").toArray(_wrap="true"),
		reader=#object(
			a=actorAsCassIdentity,
			b=authorityAsCassIdentity,
		).valueSet()
	),
	agent=authorityAsCassIdentity.cassEncrypt(
		owner=#xapiMePpk().rsaPpkToPk().replace(regex="true",replace="\r?\n",with="").toArray(_wrap="true"),
		reader=#object(
			a=actorAsCassIdentity,
			b=authorityAsCassIdentity,
		).valueSet()
	),
	assertionDate=#date(input=xapiObj.get(timestamp=""),raw="true").debug(prefix="Assertion Date:").cassEncrypt(
		owner=#xapiMePpk().rsaPpkToPk().replace(regex="true",replace="\r?\n",with="").toArray(_wrap="true"),
		reader=#object(
			a=actorAsCassIdentity,
			b=authorityAsCassIdentity,
		).valueSet()
	),
	expirationDate=#date(input=xapiObj.get(timestamp=""),addYears="1",raw="true").debug(prefix="Expiration Date:").cassEncrypt(
		owner=#xapiMePpk().rsaPpkToPk().replace(regex="true",replace="\r?\n",with="").toArray(_wrap="true"),
		reader=#object(
			a=actorAsCassIdentity,
			b=authorityAsCassIdentity,
		).valueSet()
	),
	decayFunction=#string(str="t").cassEncrypt(
		owner=#xapiMePpk().rsaPpkToPk().replace(regex="true",replace="\r?\n",with="").toArray(_wrap="true"),
		reader=#object(
			a=actorAsCassIdentity,
			b=authorityAsCassIdentity,
		).valueSet()
	),
	competency="@competency",
	confidence=xapiScore,
	evidence=#xapiEndpoint().add(z="statements?statementId=",zz=xapiObj.get(id="")).debug(prefix="Evidence:").cassEncrypt(
		owner=#xapiMePpk().rsaPpkToPk().replace(regex="true",replace="\r?\n",with="").toArray(_wrap="true"),
		reader=#object(
			a=actorAsCassIdentity,
			b=authorityAsCassIdentity,
		).valueSet()
	).toArray(_wrap="true"),
	description=#string(str="This result was retreived from an XAPI LRS. In the conversion process, we assume that the resources used to teach these competencies are valid, reliable, and a good predictor of performance. This assumption may be incorrect, and as such this data should be used for demonstration purposes only.")
);

convert=convert.put(_key=#context(),_value="http://schema.cassproject.org/0.2/");
convert=convert.put(_key=#type(),_value="Assertion");
convert=convert.put(_key=#id(),_value=#repoEndpoint().add(y="data/schema.cassproject.org.0.2.Assertion/",z=xapiObj.get(id="")));
convert=convert.put(_key=#owner(),_value=#xapiMePpk().rsaPpkToPk().replace(regex="true",replace="\r?\n",with="").toArray(_wrap="true"));

convert=#toObject(obj="@cvt").put(_key=#signature(),_value=#rsaSign(obj=#string(str="@cvt"),ppk=#xapiMePpk()).toArray(_wrap="true")).call(cvt=convert);

convert=#cassSignatureSheet(
	ppk=#xapiMePpk()
).toDatastream(
	paramName="signatureSheet",
	op=convert.skyrepoPut(
		type="schema.cassproject.org.0.2.Assertion",
		id=xapiObj.get(id="")
	)
);

convert=objectId.debug(prefix="Object ID:").getAlignedCompetency().debug(prefix="Mapped Competencies:").forEach(array="true",paramName="competency",op=convert);

convert=#if(operator=actorMbox,operand="",eq=#object(msg=#add(a="Actor has no mailbox: ",b=xapiActor.toString())).get(a=""),ne=convert);
convert=#if(operator=authorityMbox,operand="",eq=#object(msg=#add(a="Authority has no mailbox: ",b=xapiAuthority.toString())).get(a=""),ne=convert);
convert=#if(operator=xapiScore,operand="",eq=#object(msg=#add(a="XAPI Object has no score.",b=xapiScore)).get(a=""),ne=convert);

#xapiToAssertion=convert;